# Host: Fedora 35
# References:
# - https://github.com/dmacvicar/terraform-provider-libvirt

#1. Install Terraform
sudo dnf install -y dnf-plugins-core
sudo dnf config-manager --add-repo https://rpm.releases.hashicorp.com/fedora/hashicorp.repo
sudo dnf -y install terraform
terraform -version
terraform -install-autocomplete

#2. Create a working directory
mkdir cyberfest
cd cyberfest
wget -c https://download.fedoraproject.org/pub/fedora/linux/releases/34/Cloud/x86_64/images/Fedora-Cloud-Base-34-1.2.x86_64.qcow2

#3. Create main.tf file
tee main.tf <<EOF
terraform {
  required_providers {
    libvirt = {
      source  = "dmacvicar/libvirt"
      version = "~> 0.6.12"
    }
  }
}

provider "libvirt" {
  uri = "qemu:///system"
}

resource "libvirt_network" "cyberfest" {
  name      = "cyberfest"
  mode      = "nat"
  domain    = "cyberfest.ok"
  addresses = ["172.16.15.0/24"]
  autostart = "true"
  dhcp {
    enabled = true
  }
  dns {
    enabled = true
    forwarders {
      address = "8.8.8.8"
    }
  }
}

resource "libvirt_pool" "cyberfest" {
  name = "cyberfest"
  type = "dir"
  path = "/mnt/virtual/qemu/cyberfest"
}

resource "libvirt_volume" "fedora" {
  name   = "Fedora-Cloud-Base-34-1.2.x86_64.qcow2"
  pool   = libvirt_pool.cyberfest.name
  source = "./Fedora-Cloud-Base-34-1.2.x86_64.qcow2"
  format = "qcow2"
}

resource "libvirt_volume" "nst" {
  name             = "nst-34.qcow2"
  pool             = libvirt_pool.cyberfest.name
  base_volume_name = libvirt_volume.fedora.name
  size             = 107374182400
  format           = "qcow2"
}

data "template_file" "user_data" {
  template = file("${path.module}/cloud_init.cfg")
}

data "template_file" "network_config" {
  template = file("${path.module}/network_config.cfg")
}

resource "libvirt_cloudinit_disk" "commoninit" {
  name           = "commoninit.iso"
  user_data      = data.template_file.user_data.rendered
  network_config = data.template_file.network_config.rendered
  pool           = libvirt_pool.cyberfest.name
}

resource "libvirt_domain" "nst" {
  name       = "nst-34"
  arch       = "x86_64"
  vcpu       = 4
  memory     = 8192
  qemu_agent = "true"
  cloudinit  = libvirt_cloudinit_disk.commoninit.id
  cpu {
    mode = "host-model"
  }
  video {
    type = "qxl"
  }
  network_interface {
    network_name   = libvirt_network.cyberfest.name
    hostname       = "nst-34"
    mac            = "52:54:00:aa:aa:aa"
    addresses      = ["172.16.15.10"]
    wait_for_lease = true
  }
  disk {
    volume_id = libvirt_volume.nst.id
  }
}
EOF

#4. Create cloud_init.cfg file
mkpasswd --method=SHA-512 --rounds=4096

tee cloud_init.cfg <<EOF
#cloud-config
users:
  - name: utian
    sudo: ALL=(ALL) NOPASSWD:ALL
    passwd: $6$rounds=4096$dEN6V47uqK2ucbuB$U1FD57fz51bbFpLaKO1HEdTx9Nrz09Y8JNifHQkIwu9/Oq2vg07PYd3YxLXSBU2yWRS02HCJLZGvH7pCYPQRQ/
    lock_passwd: false
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZoIbsUfcwKXpQVXlCP+6Qf/bCs0WnJiYY8I0iuMaPX+6tMDA9mwRUj6i6gyLhyYa+AVEd1j3MbwJ2oute4Q4Y1QNPZUbC10g9ToYHUp+rCd5x3Jytn8CXztz6Z9KMG+YBy0otjuaeFOFKij0zTuUMZWXYBoKR7q9rKMkedyFMSFRMsjC5kF2oArFJgPAZRBQkWbu9uxYQD6TpGrQnZwPkSbFP1XwX2bZCy0G5XQ+iEbV+y7sS7sL5jitFKg0RKm3yuxKBCT4lyBYdvNVH009Le6IjYtY2xkOhTnADI4nSf5Mu7yU4PIEbAWA4lys84LPoHjZ5ypT3DV6Dle9bgGWZ utian@truman
EOF

#5. Create network_config.cfg file
tee network_config.cfg <<EOF
network:
  version: 1
  config:
  - type: physical
    name: eth0
    subnets:
      - type: dhcp
EOF